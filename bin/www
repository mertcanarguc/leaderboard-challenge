#!/usr/bin/env node

var app = require('../app');
var debug = require('debug')('challenge:server');
var http = require('http');
var cluster = require('cluster');



var port = normalizePort(process.env.PORT || '7000');
app.set('port', port);

var server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

const socketApi = require('../socket/socketApi')
const io = socketApi.io;
io.attach(server);

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        return val;
    }

    if (port >= 0) {
        return port;
    }
    return false;
}


function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
}



// if (cluster.isMaster) {
//     var numWorkers = require('os').cpus().length;

//     console.log('Master cluster setting up ' + numWorkers + ' workers...');

//     for (var i = 0; i < numWorkers; i++) {
//         cluster.fork();
//     }

//     cluster.on('online', function(worker) {
//         console.log('Worker ' + worker.process.pid + ' is online');
//     });

//     cluster.on('exit', function(worker, code, signal) {
//         console.log('Worker ' + worker.process.pid + ' died with code: ' + code + ', and signal: ' + signal);
//         console.log('Starting a new worker');
//         cluster.fork();
//     });
// } else {

//     var port = normalizePort(process.env.PORT || '3000');
//     app.set('port', port);

//     var server = http.createServer(app);

//     server.listen(port);
//     server.on('error', onError);
//     server.on('listening', onListening);

//     function normalizePort(val) {
//         var port = parseInt(val, 10);

//         if (isNaN(port)) {
//             return val;
//         }

//         if (port >= 0) {
//             return port;
//         }
//         return false;
//     }


//     function onError(error) {
//         if (error.syscall !== 'listen') {
//             throw error;
//         }

//         var bind = typeof port === 'string' ?
//             'Pipe ' + port :
//             'Port ' + port;

//         switch (error.code) {
//             case 'EACCES':
//                 console.error(bind + ' requires elevated privileges');
//                 process.exit(1);
//                 break;
//             case 'EADDRINUSE':
//                 console.error(bind + ' is already in use');
//                 process.exit(1);
//                 break;
//             default:
//                 throw error;
//         }
//     }

//     function onListening() {
//         var addr = server.address();
//         var bind = typeof addr === 'string' ?
//             'pipe ' + addr :
//             'port ' + addr.port;
//         debug('Listening on ' + bind);
//     }
// }